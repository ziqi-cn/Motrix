name: Build/release

on: push

jobs:
  release-linux:
    runs-on: ubuntu-latest
    environment: release
    env:
      GH_TOKEN: ${{ secrets.gh_token }}
      GITHUB_TOKEN: ${{ secrets.gh_token }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4


      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: rpm
        run: |
          sudo apt update 1>&2
          sudo apt install --install-recommends rpm -y 1>&2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: yarn install --network-timeout 100000
      - run: yarn run release

  release-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    environment: release
    env:
      GH_TOKEN: ${{ secrets.gh_token }}
      GITHUB_TOKEN: ${{ secrets.gh_token }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4


      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: yarn install --network-timeout 100000
      - run: yarn run release

  release-windows:
    runs-on: windows-latest
    environment: release
    env:
      gh_token: ${{ secrets.gh_token }}
      github_token: ${{ secrets.gh_token }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: yarn install --network-timeout 100000
      - run: yarn run release